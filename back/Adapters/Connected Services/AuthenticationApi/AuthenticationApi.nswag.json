{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Authentication.Api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4001"
    }
  ],
  "paths": {
    "/api/auth/{username}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Final register step",
        "operationId": "Register",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "hash",
          "description": "user's password hashed with salt",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": false
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "201": {
            "description": "the created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change user's password",
        "operationId": "ChangePassword",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "hash",
          "description": "user's password hashed with salt",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": false
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "the created user"
          }
        }
      }
    },
    "/api/auth/{username}/init": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "First register step",
        "operationId": "InitRegister",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "a salt for this username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitRegisterResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "First step to change user's password",
        "operationId": "InitChangePassword",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "a salt for this username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitRegisterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/{username}/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Final login step",
        "operationId": "Login",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "hash",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": false
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "a JWT for this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/{username}/login/init": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "First login step",
        "operationId": "InitLogin",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "a challenge for this username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitVerifyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/jwt/verify": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify if Jwt is still valid",
        "operationId": "Verify",
        "responses": {
          "200": {
            "description": "a JWT for this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/jwt/validation-key": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get public RSA key used for Jwt validation",
        "operationId": "GetValidationKey",
        "responses": {
          "200": {
            "description": "a JWT for this user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a specific user",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update an user",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "nullable": false,
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete an user",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "operationId": "GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/any": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get if there is at least one user in database",
        "operationId": "CheckIfUsersExist",
        "responses": {
          "200": {
            "description": "If at least one user exist in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "guid",
                "minLength": 1
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "minLength": 1
              }
            }
          }
        ]
      },
      "UserBase": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "settings",
          "credentials",
          "authorizations",
          "disabled"
        ],
        "properties": {
          "username": {
            "type": "string",
            "nullable": false
          },
          "hash": {
            "type": "string",
            "nullable": true
          },
          "salt": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "nullable": false,
            "$ref": "#/components/schemas/Settings"
          },
          "credentials": {
            "nullable": false,
            "$ref": "#/components/schemas/Credentials"
          },
          "authorizations": {
            "nullable": false,
            "$ref": "#/components/schemas/Authorizations"
          },
          "lastConnection": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "nullable": false
          }
        }
      },
      "Settings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "theme"
        ],
        "properties": {
          "theme": {
            "nullable": false,
            "$ref": "#/components/schemas/SettingsType"
          }
        }
      },
      "SettingsType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Dark",
          "Light",
          "System"
        ],
        "enum": [
          "Dark",
          "Light",
          "System"
        ]
      },
      "Credentials": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "github": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Github"
              }
            ]
          },
          "docker": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Docker"
              }
            ]
          }
        }
      },
      "Github": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "token",
          "user"
        ],
        "properties": {
          "token": {
            "type": "string",
            "nullable": false
          },
          "user": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "Docker": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "nullable": false
          },
          "password": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "Authorizations": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "authentication"
        ],
        "properties": {
          "authentication": {
            "nullable": false,
            "$ref": "#/components/schemas/Authentication"
          },
          "videyo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Videyo"
              }
            ]
          },
          "sousMarinJaune": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SousMarinJaune"
              }
            ]
          }
        }
      },
      "Authentication": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roles"
        ],
        "properties": {
          "roles": {
            "type": "array",
            "nullable": false,
            "items": {
              "$ref": "#/components/schemas/AuthenticationRoles"
            }
          }
        }
      },
      "AuthenticationRoles": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "User",
          "Admin"
        ],
        "enum": [
          "User",
          "Admin"
        ]
      },
      "Videyo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roles"
        ],
        "properties": {
          "roles": {
            "type": "array",
            "nullable": false,
            "items": {
              "$ref": "#/components/schemas/VideyoRole"
            }
          }
        }
      },
      "VideyoRole": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "User",
          "Admin"
        ],
        "enum": [
          "User",
          "Admin"
        ]
      },
      "SousMarinJaune": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roles"
        ],
        "properties": {
          "roles": {
            "type": "array",
            "nullable": false,
            "items": {
              "$ref": "#/components/schemas/SousMarinJauneRole"
            }
          }
        }
      },
      "SousMarinJauneRole": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Admin",
          "User"
        ],
        "enum": [
          "Admin",
          "User"
        ]
      },
      "InitRegisterResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "salt"
        ],
        "properties": {
          "salt": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "InitVerifyResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "salt",
          "challenge"
        ],
        "properties": {
          "salt": {
            "type": "string",
            "nullable": false
          },
          "challenge": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "StringResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "string",
            "nullable": false
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}